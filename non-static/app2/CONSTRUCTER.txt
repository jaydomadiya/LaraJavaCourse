        
        5/29/2023

        CONSTRUCTER:-

- CONSTRUCTER IS A SPECIAL TYPE OF METHOD,BUT ITS NOT A REGULER METHOD ,INTERNALY COMPLILER WIL BE CONSIDERING IT A METHOD.

- THE MAIN DIFFERNCE BETWEEN A METHOD AND CONSTUCTOR IS THAT METHOD MUST HAVE RETURN TYPE,BUT CONSTRCTOR MUST NOT HAVE RETURN TYPE.

- CONSTRUCTOR ARE MAINLY USED FOR INTIALIZING OBJECTS.

- IN EACH AND EVERY CLASS ,IF THERE ARE NO CONSTRUCTER ARE DEFINED BY THE PROGRAMMER THEN,COMPILER ONLY KEEPS A DEFAULT CONSTRCTOR IN EVERY CLASS WHICH IS NO ARGUMENT CONSTRRUCTOR.(ITS DOSENT)TAKES ANY ARUGUMEN

         RULES:-

 1. CONSTRUCTOR NAME MUST BE SAME AS CLASS NAME.(CASE SENSETIVE).

 2. CONSTRUCTOR MUST MUST  NOT HAVE A RETURN TYPE.

 3. CONSTRUCTOR MUST BE HAVING A BODY 

 4. CONSTRUCTOR CAN'T BE ABSTARCT.



	SOME GENRAL POINT.


 1. CONSTRUCTOR CAN HAVE ACCESS SPECIFIER AND ACCESS MODIFIER.

 2. CONSTRUCTOR CAN HAVE ANY NO.OF ARGUMENT.

 3. CONSTRUCTOR ARE EXECUTED WHILE WE ARE CREATING THE OBJECT TO THAT PARTICULER CLASS.

 4. WHILE CREATING THE OBJECT WE NEED TO CALL THE CORRESPONDING,AVAILABKE CONSTRUCTOR ONLY.

 5. FOE EACH END EVRY OBJECT CREATION , THE AVAILABLE CONSTRCTOR OF THST CLSSS WOLL BE EXECUTION.

 6. for one object creation thar paeticuler constructor ececute only once (constructor chaining is differnt).
 
 7. according to the constructer argument data type we musst supply the value while calling that constructer.

 8. ACCORDING TO THE CALLING ,WHILE CREATING THE OBJECT.CONSTRCTOR WILL BE EXECUTEING.

 9. ONE CONSTRUCTOR CAN ANY NO OF TIME BUT WE NEED TO CREATE THE OBJECT FOR CALLING THE CONSTRUCTER.

 10. IN EVERY CONSTRUCTOR BODY THE FIRST STATEMENT WHOULD BE SUPER() CALLING STATEMENT.(IF THE PROGRAMMEER DIDNT KEEP SUPER OR THIS CALLING STATEMENT EXPLICITELY.

 11. EACH AND EVRY CLASS IS THE SUPERMOST CLASS IN JAVA

 12. SOME OF THE COMMENLY REQUIRED MEMBER ARE INHERITED TO THE SUB-CLASS FROM THE OBJECT CLASS.

 13. SUPER CALLING STATEMENT IS CALLING THE OBJECT CLASS NO ARGUMENT CONSTRUCTER.

 14. IN THE OBJECT CLASS WE HAVE ONE CONSTRUCTOR WHICH IS NO ARGUMENT CONSTRUCTOR AND WE DONT HAVE ANY STATEMENT INSIDE THAT CONSTRUCTOR.

 15. SUOER STATEMENT WILL BE ALWAYS CALLING THE SUOER CLASS CONSTRUCTOR.

 16. SUPER AND THIS STATEMENT COMES UNDER NON-SATTIC.

 17. THIS CALLING STATEMENT ALWAYS CALLS THE CURRENT CLASS CONSTRUCTER NOT THE SUPER CLASS CONSTRUCTER.

 18. IF WE ONLY KEPT SUPER() OR SUPER WITH  ANY ARGUMENT THEN COMPILER WILL NOT BE KEEPING SUPER().

 20. SUPER MEANS PARENT CLASS

 21. in the constructer body only either this or super calling statement not both.

 







			
 